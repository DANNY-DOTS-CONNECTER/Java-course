@startuml
'https://plantuml.com/class-diagram

Interface Strategy{
    + {abstract} selectTrajectory(int locationX, int locationY, int shootNum, int direction, int power):List<AbstractBullet>
}

class StraightTrajectory implements Strategy{
    + selectTrajectory(int locationX, int locationY, int shootNum, int direction, int power):List<AbstractBullet>
}

class ScatteredTrajectory implements Strategy{
    + selectTrajectory(int locationX, int locationY, int shootNum, int direction, int power):List<AbstractBullet>
}

class HeroAircraft{
    - strategy:Strategy
    - {static} instance:HeroAircraft
    - HeroAircraft(int locationX, int locationY, int speedX, int speedY, int hp, Strategy strategy)
    + {static} getInstance():HeroAircraft
    + forward():void
    + setStrategy(Strategy strategy):void
    + shoot():List<AbstractBullet>
}

class BossEnemyFactory {
    + createOperation():AbstractEnemy
}

class Game{
}

Game ..> HeroAircraft
Game ..> BossEnemyFactory
HeroAircraft o--> Strategy
BossEnemyFactory o--> Strategy

@enduml