@startuml
'https://plantuml.com/class-diagram

Interface Strategy{
    + {abstract} selectTrajectory(int locationX, int locationY, int shootNum, int direction, int power):List<AbstractBullet>
}

class StraightTrajectory implements Strategy{
    + selectTrajectory(int locationX, int locationY, int shootNum, int direction, int power):List<AbstractBullet>
}

class ScatteredTrajectory implements Strategy{
    + selectTrajectory(int locationX, int locationY, int shootNum, int direction, int power):List<AbstractBullet>
}

abstract class AbstractAircraft
{
	# maxHp:int
    # hp:int
    ~ shootNum:int
    ~ power:int
    ~ direction:int
    ~ strategy:Strategy
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + decreaseHp(int decrease):void
    + getHp():int
    + setHp(int hp):void
    + shoot():List<AbstractBullet>
    + setStrategy(Strategy strategy):void
 }

class Game{
}

Game..> AbstractAircraft
AbstractAircraft o--> Strategy


@enduml